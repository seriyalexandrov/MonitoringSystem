Как работает порт сканнер?

Вызывается конструктор, который пытается создать сокет, чтобы приконнектиться к порту:
Socket socket = new Socket(ipAddress, port);
Если эта штука бросает IOException, то считаем порт закрытым.
Если ничего не бросает, то порт считаем открытым.
В конце обязательно закрываем открытый сокет.

Теперь о том, почему это работает медленно.
Сиситема бросает IOException по таймауту. Стандартный таймаут 1000 миллисекунд.
Вот в этом и проблема. Пытаемся создать соединение, ждем 1 секунду, если не соединилось, 
бросаем IOException.

Как с этим бороться?
1) Очевидно, можно уменьшить таймаут. В принципе, сеть работает достаточно быстро, и таймаут 
можно попробовать установить например 100 миллисекунд. Однако, тут есть вероятность того, 
что подключение будет устанавливаться достаточно долго, и программа решит, что порт закрыт, 
хотя реально он открыт. Можно потестировать разные значения для таймаута, от 50 до 500
миллисекунд. Делается так:

Socket socket = new Socket();
socket.connect(new InetSocketAddress(ipAddress, port), 1000);

2) Запускать сканнер в несколько потоков. При решении этой задачи, даже псевдопараллельное
выполнение(на одном процессоре) даст значительный выигрыш во времени. Навскику не скажу,
сколько нужно потоков, попробуйте от двух до десяти. Можно количество потоков
передавать программе в качестве аргумента.

Многопоточность реализовать самым простым способом.
Нужно будет создать класс, расширяющий Runnable, которому передавать в конструктор
номера портов, который нужно сканировать. Потом создать объект класса Thread и 
запустить его метод start. В конце дождаться окончания работы всех тредов.
